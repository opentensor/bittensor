# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from bittensor._proto import bittensor_pb2 as bittensor_dot___proto_dot_bittensor__pb2


class TextLastHiddenStateStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Forward = channel.unary_unary(
                '/TextLastHiddenState/Forward',
                request_serializer=bittensor_dot___proto_dot_bittensor__pb2.ForwardTextLastHiddenStateRequest.SerializeToString,
                response_deserializer=bittensor_dot___proto_dot_bittensor__pb2.ForwardTextLastHiddenStateResponse.FromString,
                )
        self.Backward = channel.unary_unary(
                '/TextLastHiddenState/Backward',
                request_serializer=bittensor_dot___proto_dot_bittensor__pb2.BackwardTextLastHiddenStateRequest.SerializeToString,
                response_deserializer=bittensor_dot___proto_dot_bittensor__pb2.BackwardTextLastHiddenStateResponse.FromString,
                )


class TextLastHiddenStateServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Forward(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Backward(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TextLastHiddenStateServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Forward': grpc.unary_unary_rpc_method_handler(
                    servicer.Forward,
                    request_deserializer=bittensor_dot___proto_dot_bittensor__pb2.ForwardTextLastHiddenStateRequest.FromString,
                    response_serializer=bittensor_dot___proto_dot_bittensor__pb2.ForwardTextLastHiddenStateResponse.SerializeToString,
            ),
            'Backward': grpc.unary_unary_rpc_method_handler(
                    servicer.Backward,
                    request_deserializer=bittensor_dot___proto_dot_bittensor__pb2.BackwardTextLastHiddenStateRequest.FromString,
                    response_serializer=bittensor_dot___proto_dot_bittensor__pb2.BackwardTextLastHiddenStateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'TextLastHiddenState', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TextLastHiddenState(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Forward(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TextLastHiddenState/Forward',
            bittensor_dot___proto_dot_bittensor__pb2.ForwardTextLastHiddenStateRequest.SerializeToString,
            bittensor_dot___proto_dot_bittensor__pb2.ForwardTextLastHiddenStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Backward(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TextLastHiddenState/Backward',
            bittensor_dot___proto_dot_bittensor__pb2.BackwardTextLastHiddenStateRequest.SerializeToString,
            bittensor_dot___proto_dot_bittensor__pb2.BackwardTextLastHiddenStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class TextSeq2SeqStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Forward = channel.unary_unary(
                '/TextSeq2Seq/Forward',
                request_serializer=bittensor_dot___proto_dot_bittensor__pb2.ForwardTextSeq2SeqRequest.SerializeToString,
                response_deserializer=bittensor_dot___proto_dot_bittensor__pb2.ForwardTextSeq2SeqResponse.FromString,
                )


class TextSeq2SeqServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Forward(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TextSeq2SeqServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Forward': grpc.unary_unary_rpc_method_handler(
                    servicer.Forward,
                    request_deserializer=bittensor_dot___proto_dot_bittensor__pb2.ForwardTextSeq2SeqRequest.FromString,
                    response_serializer=bittensor_dot___proto_dot_bittensor__pb2.ForwardTextSeq2SeqResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'TextSeq2Seq', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TextSeq2Seq(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Forward(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TextSeq2Seq/Forward',
            bittensor_dot___proto_dot_bittensor__pb2.ForwardTextSeq2SeqRequest.SerializeToString,
            bittensor_dot___proto_dot_bittensor__pb2.ForwardTextSeq2SeqResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
