"""
The Bittensor Compatibility Module serves as a centralized import hub for internal and external classes, functions,
constants, and utilities that are frequently accessed via the top-level `bittensor` namespace
(e.g., `from bittensor import Wallet`).

It consolidates these widely used symbols into `bittensor/__init__.py`, enabling a cleaner and more intuitive public API
for developers and the broader community.

Note:
    Direct imports from their respective submodules are recommended for improved clarity and long-term maintainability.
"""

from bittensor_wallet.errors import KeyFileError
from bittensor_wallet.keyfile import (
    serialized_keypair_to_keyfile_data,
    deserialize_keypair_from_keyfile_data,
    validate_password,
    ask_password_to_encrypt,
    keyfile_data_is_encrypted_nacl,
    keyfile_data_is_encrypted_ansible,
    keyfile_data_is_encrypted_legacy,
    keyfile_data_is_encrypted,
    keyfile_data_encryption_method,
    legacy_encrypt_keyfile_data,
    encrypt_keyfile_data,
    get_coldkey_password_from_environment,
    decrypt_keyfile_data,
    Keyfile,
)
from bittensor_wallet.keypair import Keypair
from bittensor_wallet.wallet import Wallet

from bittensor.core import settings, extrinsics
from bittensor.core.async_subtensor import AsyncSubtensor, get_async_subtensor
from bittensor.core.axon import Axon
from bittensor.core.chain_data import (
    AxonInfo,
    ChainIdentity,
    DelegateInfo,
    DelegateInfoLite,
    DynamicInfo,
    IPInfo,
    MetagraphInfo,
    MetagraphInfoEmissions,
    MetagraphInfoParams,
    MetagraphInfoPool,
    NeuronInfo,
    NeuronInfoLite,
    PrometheusInfo,
    ProposalCallData,
    ProposalVoteData,
    ScheduledColdkeySwapInfo,
    SelectiveMetagraphIndex,
    StakeInfo,
    SubnetHyperparameters,
    SubnetIdentity,
    SubnetInfo,
    SubnetState,
    WeightCommitInfo,
)
from bittensor.core.config import Config
from bittensor.core.dendrite import Dendrite
from bittensor.core.errors import (
    BalanceTypeError,
    BalanceUnitMismatchError,
    BlacklistedException,
    ChainConnectionError,
    ChainError,
    ChainQueryError,
    ChainTransactionError,
    DelegateTakeTooHigh,
    DelegateTakeTooLow,
    DelegateTxRateLimitExceeded,
    DuplicateChild,
    HotKeyAccountNotExists,
    IdentityError,
    InternalServerError,
    InvalidChild,
    InvalidRequestNameError,
    MetadataError,
    NominationError,
    NonAssociatedColdKey,
    NotDelegateError,
    NotEnoughStakeToSetChildkeys,
    NotRegisteredError,
    NotVerifiedException,
    PostProcessException,
    PriorityException,
    ProportionOverflow,
    RegistrationError,
    RegistrationNotPermittedOnRootSubnet,
    RunException,
    StakeError,
    SubnetNotExists,
    SynapseDendriteNoneException,
    SynapseParsingError,
    TooManyChildren,
    TransferError,
    TxRateLimitExceeded,
    UnknownSynapseError,
    UnstakeError,
)
from bittensor.core.metagraph import Metagraph
from bittensor.core.settings import BLOCKTIME
from bittensor.core.stream import StreamingSynapse
from bittensor.core.subtensor import Subtensor
from bittensor.core.synapse import TerminalInfo, Synapse
from bittensor.core.tensor import Tensor
from bittensor.core.threadpool import PriorityThreadPoolExecutor
from bittensor.extras import timelock, SubtensorApi
from bittensor.utils import (
    mock,
    ss58_to_vec_u8,
    strtobool,
    get_explorer_url_for_network,
    ss58_address_to_bytes,
    u16_normalized_float,
    u64_normalized_float,
    get_hash,
)
from bittensor.utils.balance import Balance, tao, rao
from bittensor.utils.btlogging import logging
from bittensor.utils.btlogging.levels import trace, debug, warning, info
from bittensor.utils.mock.subtensor_mock import MockSubtensor
from bittensor.utils.subnets import SubnetsAPI

__all__ = [
    "Keypair",
    "KeyFileError",
    "serialized_keypair_to_keyfile_data",
    "deserialize_keypair_from_keyfile_data",
    "validate_password",
    "ask_password_to_encrypt",
    "keyfile_data_is_encrypted_nacl",
    "keyfile_data_is_encrypted_ansible",
    "keyfile_data_is_encrypted_legacy",
    "keyfile_data_is_encrypted",
    "keyfile_data_encryption_method",
    "legacy_encrypt_keyfile_data",
    "encrypt_keyfile_data",
    "get_coldkey_password_from_environment",
    "decrypt_keyfile_data",
    "Keyfile",
    "Wallet",
    "settings",
    "timelock",
    "AsyncSubtensor",
    "Axon",
    "AxonInfo",
    "ChainIdentity",
    "DelegateInfo",
    "DelegateInfoLite",
    "DynamicInfo",
    "IPInfo",
    "MetagraphInfo",
    "MetagraphInfoEmissions",
    "MetagraphInfoParams",
    "MetagraphInfoPool",
    "NeuronInfo",
    "NeuronInfoLite",
    "PrometheusInfo",
    "ProposalCallData",
    "ProposalVoteData",
    "ScheduledColdkeySwapInfo",
    "SelectiveMetagraphIndex",
    "StakeInfo",
    "SubnetHyperparameters",
    "SubnetIdentity",
    "SubnetInfo",
    "SubnetState",
    "WeightCommitInfo",
    "Config",
    "Dendrite",
    "BalanceTypeError",
    "BalanceUnitMismatchError",
    "BlacklistedException",
    "ChainConnectionError",
    "ChainError",
    "ChainQueryError",
    "ChainTransactionError",
    "DelegateTakeTooHigh",
    "DelegateTakeTooLow",
    "DelegateTxRateLimitExceeded",
    "DuplicateChild",
    "HotKeyAccountNotExists",
    "IdentityError",
    "InternalServerError",
    "InvalidChild",
    "InvalidRequestNameError",
    "MetadataError",
    "NominationError",
    "NonAssociatedColdKey",
    "NotDelegateError",
    "NotEnoughStakeToSetChildkeys",
    "NotRegisteredError",
    "NotVerifiedException",
    "PostProcessException",
    "PriorityException",
    "ProportionOverflow",
    "RegistrationError",
    "RegistrationNotPermittedOnRootSubnet",
    "RunException",
    "StakeError",
    "SubnetNotExists",
    "SynapseDendriteNoneException",
    "SynapseParsingError",
    "TooManyChildren",
    "TransferError",
    "TxRateLimitExceeded",
    "UnknownSynapseError",
    "UnstakeError",
    "Metagraph",
    "BLOCKTIME",
    "StreamingSynapse",
    "Subtensor",
    "SubtensorApi",
    "TerminalInfo",
    "Synapse",
    "Tensor",
    "PriorityThreadPoolExecutor",
    "ss58_to_vec_u8",
    "strtobool",
    "get_explorer_url_for_network",
    "ss58_address_to_bytes",
    "u16_normalized_float",
    "u64_normalized_float",
    "get_hash",
    "Balance",
    "tao",
    "rao",
    "logging",
    "MockSubtensor",
    "SubnetsAPI",
    "trace",
    "debug",
    "warning",
    "info",
    "extrinsics",
    "mock",
    "get_async_subtensor",
]
